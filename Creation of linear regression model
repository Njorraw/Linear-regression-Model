import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

data = pd.read_csv("/content/Accidents0515.csv")

X = data[['Number_of_Vehicles', 'Number_of_Casualties',]] # Independent variables
y = data['Accident_Severity']  # Dependent variable

# Split the data into training and testing sets.
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Linear Regression model and fit it to the training data.
model= LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the test set.
y_pred = model.predict(X_test)

# Calculate the mean squared error and R-squared score to evaluate the model.
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")

import joblib

# Save the trained model to a file for future use.
joblib.dump(model, 'linear_regression_model.pkl')


# Load the saved model.
loaded_model = joblib.load('linear_regression_model.pkl')

# Create a hypothetical set of independent variables.
new_data = np.array([[12, 20,]])  # Replace with your values

# Make a prediction.
predicted_severity = loaded_model.predict(new_data)
print(f"Predicted Accident_Severity: {predicted_severity[0]}")
